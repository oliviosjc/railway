# Build stage
FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build
WORKDIR /src

# Copy csproj and restore dependencies
COPY ["RailwayManager.csproj", "./"]
RUN dotnet restore "RailwayManager.csproj"

# Copy everything else and build
COPY . .
RUN dotnet build "RailwayManager.csproj" -c Release -o /app/build

# Publish the application
FROM build AS publish
RUN dotnet publish "RailwayManager.csproj" -c Release -o /app/publish

# Final stage - serve with nginx
FROM nginx:alpine AS final
WORKDIR /usr/share/nginx/html

# Remove default nginx static assets
RUN rm -rf ./*

# Copy published files from build stage
COPY --from=publish /app/publish/wwwroot .

# Create nginx config that listens on port 8080
RUN echo 'events { } \
http { \
    include /etc/nginx/mime.types; \
    server { \
        listen 8080; \
        root /usr/share/nginx/html; \
        index index.html; \
        location / { \
            try_files $uri $uri/ /index.html =404; \
        } \
        location ~* \.wasm$ { \
            add_header Content-Type "application/wasm"; \
        } \
    } \
}' > /etc/nginx/nginx.conf

EXPOSE 8080
CMD ["nginx", "-g", "daemon off;"]